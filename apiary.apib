FORMAT: 1A
HOST: https://partner.starship.xyz/api/v1

# Partner API

Starship API allows partners to integrate our robot delivery platform into their applications.

## Overview

To get started with Starship API ask for access credentials and url from your Starship contact.

Starship does offer separate partner sandbox environment for testing.

Loading area is a location near parcel shop or restaurant, where the robot can wait safely for pickup.
It could be off the front door or back door or some other suitable location.

Every delivery either starts from or ends at a loading area.

Loading areas have to be configured by Starship before deliveries can be booked. To create a new loading area
Starship needs following information:
 * name
 * address
 * id in partner database

Robot availability days and hours are configured by Starship based on contract between Starship and partner

### What can the API do?
 * Get available delivery slots
 * Reserve robot for delivery
 * Confirm reservations

### Authentication

All requests need to include AccountSid and AuthToken headers provided by Starship

### Requests

Base URL for all requests to the Starship API is: https://partner.starship.xyz/api/v1

URL includes version (/v1). This version refers to overall layout of endpoints and response formats

Our API is REST-based and uses JSON encoding, 

this means

 * It make use of standard HTTP verbs like GET, POST
 * The API uses standard HTTP error responses to describe errors.
 * POST data should be encoded as JSON
 * All responses will be in JSON

## API endpoints

### /slots

#### Retrieve list of possible slots [POST]

* Customer information has to be passed in, because available slots depend on drive distance
* Parcel information has to be passed in, because robots have different capabilities

+ Request (application/json)

     + Headers
     
            AccountSid: 370360ee-ca25-4b1a-9df7-1d625d601d37
            AuthToken: ac6f3815-c19d-467b-9768-41810f493c5c
            
    + Attributes
        + days (string, optional) - Optional number of days to return slots for. Default 2
        + start: '2017-01-11T10:00:00Z' (string, optional) - Optional start timestamp for slots
        
        + customer (Customer info)
            
        + parcel (object, required) - Parcel information
            + dimensions (Parcel dimensions)
            + weight (Parcel weight)
       
            
+ Response 200 (application/json)
    Returns status 200 and array of ISO 8601 formatted time intervals 
    or status 400 and an error code
    
    Possible error codes
    
    | Code      | Explanation         |
    |-----------|---------------------|
    | no_slots  | No available slots |
    | no_robots | No available robots |
    | outside_hours | Outside working hours |
    | not_mapped | Route is not mapped yet |
    | too_far | Route is too long for robot delivery |
    | invalid_phone | Missing or invalid phone number |
    | parcel_too_big | Parcel would not fit into the robot  |
    | parcel_too_heavy | Parcel is too heavy to be carried by robot  |
    | bad_request | Invalid/missing data |
    

    + Body
    
            [
                {
                    start: '2017-01-11T13:00:00Z',
                    end: '2017-01-11T13:15:00Z'
                },
                {
                    start: '2017-01-11T14:00:00Z',
                    end: '2017-01-11T14:15:00Z'
                },
                {
                    start: '2017-01-11T15:00:00Z',
                    end: '2017-01-11T15:15:00Z'
                },
                {
                    start: '2017-01-12T12:00:00Z',
                    end: '2017-01-12T12:15:00Z'
                },
                {
                    start: '2017-01-12T16:15:00Z',
                    end: '2017-01-12T16:30:00Z'
                }
            ]

+ Response 400 (application/json)

    Returned when no slots are available. 
    
    + Body
    
            {
                "code": "no_slots",
                "reason": "No available slots"
            }

    
    

### /deliveries

#### Make delivery reservation [POST]

Returns 201 status code on success. Successful reservation is valid for 2 minutes.

Returns 400 on rejection, along with response body containing reason

| Code      | Explanation         |
|-----------|---------------------|
| no_robots | No available robots |
| outside_hours | Outside working hours |
| not_mapped | Route is not mapped yet |
| too_far | Route is too long for robot delivery |
| bad_request | Invalid/missing data |
 
+ Request (application/json)

     + Headers
     
            AccountSid: 370360ee-ca25-4b1a-9df7-1d625d601d37
            AuthToken: ac6f3815-c19d-467b-9768-41810f493c5c

    + Attributes

        + from (object, required) - Pickup location. Loading areas need to be configured before use
            + loadingarea: loading area id (string) 

        + to (Customer info)

        + parcel (object, required)
            + description: Pizza (string, optional) - What's inside?
            + reference: CFG345 (string, required) - Order/delivery id in partner system
            + dimensions (Parcel dimensions)
            + weight (Parcel weight)

        + due (object, optional) - When do you expect robot be at customer location. ASAP, if omitted
            + start: `2017-08-08T13:00:00Z`, (string, optional) - ISO 8601 formatted Delivery slot start
            + end: `2017-08-08T13:05:00Z`, (string, optional) - ISO 8601 formatted Delivery slot end
            
        + note (string, optional)
            Note from customer regarding delivery. For example "call me on arrival"
           

+ Response 201

    + Body
    
            {
                "id": "5818bc832f00ee01e8402745",
                "status": "RESERVED"
            }
    
+ Response 400


    + Body
    
            {
                "code": "no_robots",
                "reason": "No available robots"
            }


   


    
### /deliveries/{id}

#### Confirm delivery [POST]

Confirm previously created delivery

+ Parameters
    + id - Id from response of reservation request
    
+ Request (application/json)

     + Headers
     
            AccountSid: 370360ee-ca25-4b1a-9df7-1d625d601d37
            AuthToken: ac6f3815-c19d-467b-9768-41810f493c5c

    + Attributes

        + action: CONFIRM (string, required) 

+ Response 200 (application/json)

    + Body

            {
                "id": "abc123",
                "status": "CONFIRMED"
            }
            
+ Response 400 (application/json)

    + Body

            {
                "code": "not_found",
                "reason": "Delivery not found or not RESERVED"
            }
            
### Cancel delivery [DELETE]

Cancel previously created delivery

+ Parameters
    + id - Delivery id
    
+ Request (application/json)

     + Headers
     
            AccountSid: 370360ee-ca25-4b1a-9df7-1d625d601d37
            AuthToken: ac6f3815-c19d-467b-9768-41810f493c5c

+ Response 200 (application/json)

    + Body

            {
                "id": "abc123",
                "status": "DELETED"
            }
            
+ Response 400 (application/json)

    + Body

            {
                "code": "not_found",
                "reason": "Delivery not found or already completed"
            }
            
            
# Data Structures

## Customer info (object)
+ address: Random Street 2 (string, required)
+ address2: Apt 64 (string, optional)
+ city: London (string, required)
+ zip: AR52 (string, required)
+ country: UK (string, required)
+ name: Jane Doe(string, required)
+ phone: +441234567889 (string, required) Mobile phone number 

## Parcel dimensions (object)

+ unit: mm (string, required)
    Supported units: mm, in
    
+ width: 210 (number, required) 
+ height: 200 (number, required)
+ length: 400 (number, required)


## Parcel weight (object)

+ unit: mm (string, required)
    Supported units: g, lbs
    
+ value: 500 (number, required)